{
	"dcc:digitalCalibrationCertificate":

	{
	  "@xmlns:dcc": "https://ptb.de/dcc",
	  "@xmlns:si": "https://ptb.de/si",
	  "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
	  "@xsi:schemaLocation": "https://ptb.de/dcc https://ptb.de/dcc/v3.2.0/dcc.xsd",
	  "@dcc:schemaVersion": "3.2.0",	
		
	  "comment": "EMPIR DCC2GO Example, Copyright (c) 2022 - 2023 DCC2GO project members, https://www.ptb.de/dcc2go/project, contact dcc2go@ptb.de, DOI ...",
	  "comment": "This XML file is free data: you can redistribute it and/or modify it under the terms of the Creative Commons Attribution 4.0 International License as published by the Creative Commons Corporation.",
	  "comment": "This XML is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",
	  "comment": "You should have received a copy of the Commons Attribution 4.0 International License along with this XML.  If not, see https://creativecommons.org/licenses/by/4.0/.",
  
	  "dcc:administrativeData": {
		"dcc:dccSoftware": {
		  "dcc:software": {
			"dcc:name": {
			  "dcc:content": "GEMIMEG tool"
			},
			"dcc:release": "v1.3.0"
		  }
		},
		"dcc:coreData": {
		  "dcc:countryCodeISO3166_1": "GB",
		  "dcc:usedLangCodeISO639_1": "en",
		  "dcc:mandatoryLangCodeISO639_1": "en",
		  "dcc:uniqueIdentifier": "DCC2GO-Temperature-DCC-Example",
		  "dcc:identifications": {
			"dcc:identification": {
			  "dcc:issuer": "calibrationLaboratory",
			  "dcc:value": "2023/04/0001",
			  "dcc:name": {
				"dcc:content": {
				  "@dcc:lang": "en",
				  "#text": "Order no."
				}
			  }
			}
		  },
		  "dcc:beginPerformanceDate": "2023-04-13",
		  "dcc:endPerformanceDate": "2023-04-14",
		  "dcc:performanceLocation": "laboratory"
		},
		"dcc:items": {
		  "dcc:item": {
			"dcc:name": {
			  "dcc:content": {
				"@dcc:lang": "en",
				"#text": "Temperature sensor"
			  }
			},
			"dcc:manufacturer": {
			  "dcc:name": {
				"dcc:content": "Sensor-Manufacturer"
			  }
			},
			"dcc:model": "PT100",
			"dcc:identifications": {
			  "dcc:identification": {
				"dcc:issuer": "manufacturer",
				"dcc:value": "2309823482",
				"dcc:name": {
				  "dcc:content": {
					"@dcc:lang": "en",
					"#text": "Serial no."
				  }
				}
			  }
			}
		  }
		},
		"dcc:calibrationLaboratory": {
		  "dcc:contact": {
			"dcc:name": {
			  "dcc:content": "EMPIR-DCC2GO"
			},
			"dcc:eMail": "dcc2go@ptb.de",
			"dcc:location": {
			  "dcc:city": "Capital City",
			  "dcc:postCode": "12345",
			  "dcc:street": "High Street",
			  "dcc:streetNo": "1",
			  "dcc:further": {
				"dcc:content": "https://www.ptb.de/dcc2go/project"
			  }
			}
		  }
		},
		"dcc:respPersons": {
		  "dcc:respPerson": {
			"dcc:person": {
			  "dcc:name": {
				"dcc:content": "Jane Bloggs"
			  }
			},
			"dcc:mainSigner": "true"
		  }
		},
		"dcc:customer": {
		  "dcc:name": {
			"dcc:content": "Example Company"
		  },
		  "dcc:eMail": "info@customer.xx",
		  "dcc:location": {
			"dcc:city": "Capital City",
			"dcc:postCode": "789101"
		  }
		},
		"dcc:statements": {
		  "dcc:statement": {
			"@dcc:refType": "basic_cipmMRA",
			"dcc:declaration": {
			  "dcc:content": {
				"@dcc:lang": "en",
				"#text": "This certificate is consistent with the Calibration and Measurement Capabilities (CMCs) that are included in Appendix C of the Mutual Recognition Arrangement (MRA) drawn up by the International Committee for Weights and Measures (CIPM). Under the MRA, all participating institutes recognize the validity of each otherâ€™s calibration and measurement certificates for the quantities, ranges and measurement uncertainties specified in Appendix C (for details, see http://www.bipm.org)."
			  }
			}
		  }
		}
	  },
	  "dcc:measurementResults": {
		"dcc:measurementResult": {
		  "dcc:name": {
			"dcc:content": {
			  "@dcc:lang": "en",
			  "#text": "Measurement results"
			}
		  },
		  "dcc:usedMethods": {
			"dcc:usedMethod": {
			  "@dcc:refType": "gp_temperatureSensor",
			  "dcc:name": {
				"dcc:content": {
				  "@dcc:lang": "en",
				  "#text": "Calibration of temperature sensors"
				}
			  }
			}
		  },
		  "dcc:measuringEquipments": {
			"dcc:measuringEquipment": {
			  "@dcc:refType": "basic_normalUsed",
			  "dcc:name": {
				"dcc:content": {
				  "@dcc:lang": "en",
				  "#text": "Pt 100 thermometer"
				}
			  },
			  "dcc:identifications": {
				"dcc:identification": {
				  "dcc:issuer": "manufacturer",
				  "dcc:value": "reference-PT100-002"
				}
			  }
			}
		  },
		  "dcc:results": {
			"dcc:result": {
			  "@dcc:refType": "dcc2go_exampleMeasuringResult",
			  "dcc:name": {
				"dcc:content": {
				  "@dcc:lang": "en",
				  "#text": "Measuring results"
				}
			  },
			  "dcc:data": {
				"dcc:list": {
				  "@dcc:refType": "dcc2go_exampleTable",
				  "dcc:quantity": [
					{
					  "@dcc:refType": "basic_referenceValue",
					  "dcc:name": {
						"dcc:content": {
						  "@dcc:lang": "en",
						  "#text": "Reference value"
						}
					  },
					  "si:realListXMLList": {
						"si:valueXMLList": "33.098 99.971 175.103 250.169 320.004",
						"si:unitXMLList": "\\degreecelsius"
					  }
					},
					{
					  "@dcc:refType": "basic_measuredValue",
					  "dcc:name": {
						"dcc:content": {
						  "@dcc:lang": "en",
						  "#text": "Indicated measured value probe"
						}
					  },
					  "si:realListXMLList": {
						"si:valueXMLList": "33.17 100.06 175.21 250.16 319.92",
						"si:unitXMLList": "\\degreecelsius"
					  }
					},
					{
					  "@dcc:refType": "basic_measurementError",
					  "dcc:name": {
						"dcc:content": {
						  "@dcc:lang": "en",
						  "#text": "Measurement error"
						}
					  },
					  "si:realListXMLList": {
						"si:valueXMLList": "0.072 0.089 0.107 -0.009 -0.084",
						"si:unitXMLList": "\\kelvin",
						"si:expandedUncXMLList": {
						  "si:uncertaintyXMLList": "0.061",
						  "si:coverageFactorXMLList": "2",
						  "si:coverageProbabilityXMLList": "0.95",
						  "si:distributionXMLList": "normal"
						}
					  }
					}
				  ]
				}
			  }
			}
		  }
		}
	  },
	  "dcc:document": {
		"dcc:fileName": "human_readable.html",
		"dcc:mimeType": "text/html",
		"dcc:dataBase64": ""
	  }
	}
}